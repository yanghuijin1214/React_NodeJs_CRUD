{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\uAC8C\\uC2DC\\uD310\\\\board\\\\src\\\\BoardWriteForm.js\";\nimport React, { Component } from \"react\"; //글쓰기 위한 editor 사용\n\nimport CKEditor from \"ckeditor4-react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardWriteForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\"\n    };\n\n    this.writeBoard = () => {\n      let url;\n      let send_param;\n      const boardTitle = this.boardTitle.value;\n      const boardContent = this.state.data;\n\n      if (boardTitle === undefined || boardTitle === \"\") {\n        alert(\"글 제목을 입력해주세요.\");\n        boardTitle.focus();\n        return;\n      } else if (boardContent === undefined || boardContent === \"\") {\n        alert(\"글 내용을 입력해주세요.\");\n        boardContent.focus();\n        return;\n      }\n\n      url = \"http://localhost:8080/board/write\";\n      send_param = {\n        headers,\n        _id: window.sessionStorage.getItem(\"login_id\"),\n        title: boardTitle\n      };\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.location.query);\n  }\n\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    const titleStyle = {\n      marginBottom: 5\n    };\n    const buttonStyle = {\n      marginTop: 5\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        style: titleStyle,\n        placeholder: \"\\uAE00 \\uC81C\\uBAA9\",\n        ref: ref => this.boardTitle = ref,\n        children: [/*#__PURE__*/_jsxDEV(CKEditor, {\n          data: this.state.data,\n          onChange: this.onEditorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: buttonStyle,\n          onClick: this.writeBoard,\n          block: true,\n          children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BoardWriteForm;","map":{"version":3,"sources":["C:/Users/user/Desktop/react게시판/board/src/BoardWriteForm.js"],"names":["React","Component","CKEditor","Button","Form","axios","defaults","withCredentials","headers","BoardWriteForm","state","data","writeBoard","url","send_param","boardTitle","value","boardContent","undefined","alert","focus","_id","window","sessionStorage","getItem","title","componentDidMount","console","log","props","location","query","render","divStyle","margin","titleStyle","marginBottom","buttonStyle","marginTop","ref","onEditorChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,iBAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEAA,KAAK,CAACC,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,MAAMC,OAAO,GAAG;AAAED,EAAAA,eAAe,EAAE;AAAnB,CAAhB;;AAEA,MAAME,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCS,KADqC,GAC7B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD6B;;AAAA,SAIrCC,UAJqC,GAIxB,MAAM;AACjB,UAAIC,GAAJ;AACA,UAAIC,UAAJ;AAEA,YAAMC,UAAU,GAAG,KAAKA,UAAL,CAAgBC,KAAnC;AACA,YAAMC,YAAY,GAAG,KAAKP,KAAL,CAAWC,IAAhC;;AAEA,UAAII,UAAU,KAAKG,SAAf,IAA4BH,UAAU,KAAK,EAA/C,EAAmD;AACjDI,QAAAA,KAAK,CAAC,eAAD,CAAL;AACAJ,QAAAA,UAAU,CAACK,KAAX;AACA;AACD,OAJD,MAIO,IAAIH,YAAY,KAAKC,SAAjB,IAA8BD,YAAY,KAAK,EAAnD,EAAuD;AAC5DE,QAAAA,KAAK,CAAC,eAAD,CAAL;AACAF,QAAAA,YAAY,CAACG,KAAb;AACA;AACD;;AAEDP,MAAAA,GAAG,GAAG,mCAAN;AACAC,MAAAA,UAAU,GAAG;AACXN,QAAAA,OADW;AAEXa,QAAAA,GAAG,EAAEC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,UAA9B,CAFM;AAGXC,QAAAA,KAAK,EAAEV;AAHI,OAAb;AAKD,KA3BoC;AAAA;;AA4BrCW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAAhC;AACD;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,QAAQ,GAAG;AACfC,MAAAA,MAAM,EAAE;AADO,KAAjB;AAGA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,YAAY,EAAE;AADG,KAAnB;AAGA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,SAAS,EAAE;AADO,KAApB;AAGA,wBACE;AAAK,MAAA,KAAK,EAAEL,QAAZ;AAAsB,MAAA,SAAS,EAAC,KAAhC;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEE,UAFT;AAGE,QAAA,WAAW,EAAC,qBAHd;AAIE,QAAA,GAAG,EAAGI,GAAD,IAAU,KAAKxB,UAAL,GAAkBwB,GAJnC;AAAA,gCAME,QAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAK7B,KAAL,CAAWC,IADnB;AAEE,UAAA,QAAQ,EAAE,KAAK6B;AAFjB;AAAA;AAAA;AAAA;AAAA,gBANF,eAUE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEH,WAAf;AAA4B,UAAA,OAAO,EAAE,KAAKzB,UAA1C;AAAsD,UAAA,KAAK,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA5DoC;;AA8DvC,eAAeH,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\n//글쓰기 위한 editor 사용\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass BoardWriteForm extends Component {\r\n  state = {\r\n    data: \"\",\r\n  };\r\n  writeBoard = () => {\r\n    let url;\r\n    let send_param;\r\n\r\n    const boardTitle = this.boardTitle.value;\r\n    const boardContent = this.state.data;\r\n\r\n    if (boardTitle === undefined || boardTitle === \"\") {\r\n      alert(\"글 제목을 입력해주세요.\");\r\n      boardTitle.focus();\r\n      return;\r\n    } else if (boardContent === undefined || boardContent === \"\") {\r\n      alert(\"글 내용을 입력해주세요.\");\r\n      boardContent.focus();\r\n      return;\r\n    }\r\n\r\n    url = \"http://localhost:8080/board/write\";\r\n    send_param = {\r\n      headers,\r\n      _id: window.sessionStorage.getItem(\"login_id\"),\r\n      title: boardTitle,\r\n    };\r\n  };\r\n  componentDidMount() {\r\n    console.log(this.props.location.query);\r\n  }\r\n  render() {\r\n    const divStyle = {\r\n      margin: 50,\r\n    };\r\n    const titleStyle = {\r\n      marginBottom: 5,\r\n    };\r\n    const buttonStyle = {\r\n      marginTop: 5,\r\n    };\r\n    return (\r\n      <div style={divStyle} className=\"App\">\r\n        <h2>글쓰기</h2>\r\n        <Form.Control\r\n          type=\"text\"\r\n          style={titleStyle}\r\n          placeholder=\"글 제목\"\r\n          ref={(ref) => (this.boardTitle = ref)}\r\n        >\r\n          <CKEditor\r\n            data={this.state.data}\r\n            onChange={this.onEditorChange}\r\n          ></CKEditor>\r\n          <Button style={buttonStyle} onClick={this.writeBoard} block>\r\n            저장하기\r\n          </Button>\r\n        </Form.Control>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default BoardWriteForm;\r\n"]},"metadata":{},"sourceType":"module"}