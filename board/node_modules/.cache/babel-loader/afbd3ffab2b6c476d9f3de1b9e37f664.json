{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\uAC8C\\uC2DC\\uD310\\\\board\\\\src\\\\MypageForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nfunction MyPageForm() {\n  _s();\n\n  const [pwshow, setPwshow] = useState(false);\n\n  const update = () => {\n    //현재 비밀번호 일치하는지\n    const name = this.name.value;\n    const cur_pw = this.cur_pw.value;\n    const new_pw = this.new_pw.value;\n    const new_pw_Check = this.new_pw_Check.value;\n\n    if (name === \"\" || name === undefined) {\n      alert(\"바꿀 이름을 입력해주세요.\");\n      this.name.focus();\n      return;\n    } else if (cur_pw === \"\" || cur_pw === undefined) {\n      alert(\"현재 비밀번호를 입력해주세요.\");\n      this.cur_pw.focus();\n      return;\n    } //new_pw없으면 name만 수정\n\n\n    if (new_pw === \"\" || new_pw === undefined) {\n      const send_param = {\n        name: name,\n        _id: window.sessionStorage.getItem(\"login_id\")\n      };\n      axios.post(\"http://localhost:8080/member/update\", send_param).then(returnData => {\n        if (returnData.data.message) {\n          alert(\"회원정보 수정 완료했습니다.\");\n          this.name = \"\";\n          this.cur_pw = \"\";\n          this.new_pw = \"\";\n          this.new_pw_Check = \"\";\n        } else {\n          alert(\"회원정보 수정 실패! 다시 시도해주세요.\");\n        }\n      });\n    } //바꿀비밀번호, 확인 일치하는지\n    else {\n        if (new_pw !== new_pw_Check) {\n          alert(\"바꿀 비밀번호를 다시 확인해주세요.\");\n          this.new_pw.focus();\n          return;\n        } //바꿀 비밀번호 체크 일치\n        else {\n            const send_param = {\n              name: name,\n              _id: window.sessionStorage.getItem(\"login_id\"),\n              new_pw: new_pw\n            };\n            axios.post(\"http://localhost:8080/member/update\", send_param).then(returnData => {\n              if (returnData.data.message) {\n                alert(\"회원정보 수정 완료했습니다.\");\n                this.name = \"\";\n                this.cur_pw = \"\";\n                this.new_pw = \"\";\n                this.new_pw_Check = \"\";\n              } else {\n                alert(\"회원정보 수정 실패! 다시 시도해주세요.\");\n              }\n            });\n          }\n      }\n  };\n\n  const divStyle = {\n    margin: 50\n  };\n  const marginBottom = {\n    marginBottom: 5\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          disabled: true,\n          value: window.sessionStorage.getItem(\"login_email\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          ref: ref => this.name = ref,\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"current password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          ref: ref => this.cur_pw = ref,\n          placeholder: \"Enter password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC218\\uC815\\uD558\\uB824\\uBA74 \\uD074\\uB9AD\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n          onClick: setPwshow,\n          children: \"PW \\uC218\\uC815\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: `${pwshow === true ? \"block\" : \"none\"}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"new password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: ref => this.new_pw = ref,\n            placeholder: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"new password check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            ref: ref => this.new_pw_Check = ref,\n            placeholder: \"Enter New Password check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: update,\n        block: true,\n        style: marginBottom,\n        children: \"\\uD68C\\uC6D0\\uC815\\uBCF4 \\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        block: true,\n        children: \"\\uD68C\\uC6D0 \\uD0C8\\uD1F4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(MyPageForm, \"6WpbZOsrBfS4jOIqK6HMeIOkdKs=\");\n\n_c = MyPageForm;\nexport default MyPageForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPageForm\");","map":{"version":3,"sources":["C:/Users/user/Desktop/react게시판/board/src/MypageForm.js"],"names":["React","useState","Form","Button","axios","defaults","withCredentials","headers","MyPageForm","pwshow","setPwshow","update","name","value","cur_pw","new_pw","new_pw_Check","undefined","alert","focus","send_param","_id","window","sessionStorage","getItem","post","then","returnData","data","message","divStyle","margin","marginBottom","ref","display"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nfunction MyPageForm() {\r\n  const [pwshow, setPwshow] = useState(false);\r\n\r\n  const update = () => {\r\n    //현재 비밀번호 일치하는지\r\n    const name = this.name.value;\r\n\r\n    const cur_pw = this.cur_pw.value;\r\n    const new_pw = this.new_pw.value;\r\n    const new_pw_Check = this.new_pw_Check.value;\r\n\r\n    if (name === \"\" || name === undefined) {\r\n      alert(\"바꿀 이름을 입력해주세요.\");\r\n      this.name.focus();\r\n      return;\r\n    } else if (cur_pw === \"\" || cur_pw === undefined) {\r\n      alert(\"현재 비밀번호를 입력해주세요.\");\r\n      this.cur_pw.focus();\r\n      return;\r\n    }\r\n\r\n    //new_pw없으면 name만 수정\r\n    if (new_pw === \"\" || new_pw === undefined) {\r\n      const send_param = {\r\n        name: name,\r\n        _id: window.sessionStorage.getItem(\"login_id\"),\r\n      };\r\n      axios\r\n        .post(\"http://localhost:8080/member/update\", send_param)\r\n        .then((returnData) => {\r\n          if (returnData.data.message) {\r\n            alert(\"회원정보 수정 완료했습니다.\");\r\n            this.name = \"\";\r\n            this.cur_pw = \"\";\r\n            this.new_pw = \"\";\r\n            this.new_pw_Check = \"\";\r\n          } else {\r\n            alert(\"회원정보 수정 실패! 다시 시도해주세요.\");\r\n          }\r\n        });\r\n    }\r\n\r\n    //바꿀비밀번호, 확인 일치하는지\r\n    else {\r\n      if (new_pw !== new_pw_Check) {\r\n        alert(\"바꿀 비밀번호를 다시 확인해주세요.\");\r\n        this.new_pw.focus();\r\n        return;\r\n      }\r\n      //바꿀 비밀번호 체크 일치\r\n      else {\r\n        const send_param = {\r\n          name: name,\r\n          _id: window.sessionStorage.getItem(\"login_id\"),\r\n          new_pw: new_pw,\r\n        };\r\n        axios\r\n          .post(\"http://localhost:8080/member/update\", send_param)\r\n          .then((returnData) => {\r\n            if (returnData.data.message) {\r\n              alert(\"회원정보 수정 완료했습니다.\");\r\n              this.name = \"\";\r\n              this.cur_pw = \"\";\r\n              this.new_pw = \"\";\r\n              this.new_pw_Check = \"\";\r\n            } else {\r\n              alert(\"회원정보 수정 실패! 다시 시도해주세요.\");\r\n            }\r\n          });\r\n      }\r\n    }\r\n  };\r\n  const divStyle = {\r\n    margin: 50,\r\n  };\r\n  const marginBottom = {\r\n    marginBottom: 5,\r\n  };\r\n  return (\r\n    <>\r\n      <div style={divStyle}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            disabled\r\n            value={window.sessionStorage.getItem(\"login_email\")}\r\n          />\r\n          <Form.Label>name</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            ref={(ref) => (this.name = ref)}\r\n            placeholder=\"Enter email\"\r\n          />\r\n          <Form.Label>current password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            ref={(ref) => (this.cur_pw = ref)}\r\n            placeholder=\"Enter password\"\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            비밀번호를 수정하려면 클릭해주세요.\r\n          </Form.Text>\r\n          <Form.Button onClick={setPwshow}>PW 수정</Form.Button>\r\n          <div style={{ display: `${pwshow === true ? \"block\" : \"none\"}` }}>\r\n            <Form.Label>new password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              ref={(ref) => (this.new_pw = ref)}\r\n              placeholder=\"Enter New Password\"\r\n            />\r\n            <Form.Label>new password check</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              ref={(ref) => (this.new_pw_Check = ref)}\r\n              placeholder=\"Enter New Password check\"\r\n            />\r\n          </div>\r\n        </Form.Group>\r\n        <Button variant=\"primary\" onClick={update} block style={marginBottom}>\r\n          회원정보 수정\r\n        </Button>\r\n        <Button variant=\"primary\" block>\r\n          회원 탈퇴\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPageForm;\r\n"]},"metadata":{},"sourceType":"module"}