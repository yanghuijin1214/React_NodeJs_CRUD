{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\react\\uAC8C\\uC2DC\\uD310\\\\board\\\\src\\\\BoardWriteForm.js\";\nimport React, { Component } from \"react\";\nimport CKEditor from \"ckeditor4-react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nclass BoardWriteForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: \"\"\n    };\n\n    this.writeBoard = () => {\n      let url;\n      let send_param;\n      const boardTitle = this.boardTitle.value;\n      const boardContent = this.state.data;\n\n      if (boardTitle === undefined || boardTitle === \"\") {\n        alert(\"글 제목을 입력 해주세요.\");\n        boardTitle.focus();\n        return;\n      } else if (boardContent === undefined || boardContent === \"\") {\n        alert(\"글 내용을 입력 해주세요.\");\n        boardContent.focus();\n      }\n\n      if (this.props.location.query !== undefined) {\n        url = \"http://localhost:8080/board/update\";\n        send_param = {\n          headers,\n          _id: this.props.location.query._id,\n          title: boardTitle,\n          content: boardContent\n        };\n      } else {\n        url = \"http://localhost:8080/board/write\";\n        send_param = {\n          headers,\n          _id: window.sessionStorage.getItem(\"login_id\"),\n          title: boardTitle,\n          content: boardContent\n        };\n      }\n\n      axios.post(url, send_param) //정상 수행\n      .then(returnData => {\n        if (returnData.data.message) {\n          alert(returnData.data.message);\n          window.location.href = \"/\";\n        } else {\n          alert(\"글쓰기 실패\");\n        }\n      }) //에러\n      .catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.onEditorChange = evt => {\n      this.setState({\n        data: evt.editor.getData()\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.location.query !== undefined) {\n      this.boardTitle.value = this.props.location.query.title;\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.location.query !== undefined) {\n      this.setState({\n        data: this.props.location.query.content\n      });\n    }\n  }\n\n  render() {\n    const divStyle = {\n      margin: 50\n    };\n    const titleStyle = {\n      marginBottom: 5\n    };\n    const buttonStyle = {\n      marginTop: 5\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAE00\\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        style: titleStyle,\n        placeholder: \"\\uAE00 \\uC81C\\uBAA9\",\n        ref: ref => this.boardTitle = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n        data: this.state.data,\n        onChange: this.onEditorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: buttonStyle,\n        onClick: this.writeBoard,\n        block: true,\n        children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BoardWriteForm;","map":{"version":3,"sources":["C:/Users/user/Desktop/react게시판/board/src/BoardWriteForm.js"],"names":["React","Component","CKEditor","Button","Form","axios","defaults","withCredentials","headers","BoardWriteForm","state","data","writeBoard","url","send_param","boardTitle","value","boardContent","undefined","alert","focus","props","location","query","_id","title","content","window","sessionStorage","getItem","post","then","returnData","message","href","catch","err","console","log","onEditorChange","evt","setState","editor","getData","componentDidMount","componentWillMount","render","divStyle","margin","titleStyle","marginBottom","buttonStyle","marginTop","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\nconst headers = { withCredentials: true };\r\n\r\nclass BoardWriteForm extends Component {\r\n  state = {\r\n    data: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.location.query !== undefined) {\r\n      this.boardTitle.value = this.props.location.query.title;\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.location.query !== undefined) {\r\n      this.setState({\r\n        data: this.props.location.query.content,\r\n      });\r\n    }\r\n  }\r\n\r\n  writeBoard = () => {\r\n    let url;\r\n    let send_param;\r\n\r\n    const boardTitle = this.boardTitle.value;\r\n    const boardContent = this.state.data;\r\n\r\n    if (boardTitle === undefined || boardTitle === \"\") {\r\n      alert(\"글 제목을 입력 해주세요.\");\r\n      boardTitle.focus();\r\n      return;\r\n    } else if (boardContent === undefined || boardContent === \"\") {\r\n      alert(\"글 내용을 입력 해주세요.\");\r\n      boardContent.focus();\r\n    }\r\n\r\n    if (this.props.location.query !== undefined) {\r\n      url = \"http://localhost:8080/board/update\";\r\n      send_param = {\r\n        headers,\r\n        _id: this.props.location.query._id,\r\n        title: boardTitle,\r\n        content: boardContent,\r\n      };\r\n    } else {\r\n      url = \"http://localhost:8080/board/write\";\r\n      send_param = {\r\n        headers,\r\n        _id: window.sessionStorage.getItem(\"login_id\"),\r\n        title: boardTitle,\r\n        content: boardContent,\r\n      };\r\n    }\r\n\r\n    axios\r\n      .post(url, send_param)\r\n      //정상 수행\r\n      .then((returnData) => {\r\n        if (returnData.data.message) {\r\n          alert(returnData.data.message);\r\n          window.location.href = \"/\";\r\n        } else {\r\n          alert(\"글쓰기 실패\");\r\n        }\r\n      })\r\n      //에러\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  onEditorChange = (evt) => {\r\n    this.setState({\r\n      data: evt.editor.getData(),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const divStyle = {\r\n      margin: 50,\r\n    };\r\n    const titleStyle = {\r\n      marginBottom: 5,\r\n    };\r\n    const buttonStyle = {\r\n      marginTop: 5,\r\n    };\r\n\r\n    return (\r\n      <div style={divStyle} className=\"App\">\r\n        <h2>글쓰기</h2>\r\n        <Form.Control\r\n          type=\"text\"\r\n          style={titleStyle}\r\n          placeholder=\"글 제목\"\r\n          ref={(ref) => (this.boardTitle = ref)}\r\n        />\r\n        <CKEditor\r\n          data={this.state.data}\r\n          onChange={this.onEditorChange}\r\n        ></CKEditor>\r\n        <Button style={buttonStyle} onClick={this.writeBoard} block>\r\n          저장하기\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardWriteForm;\r\n"]},"metadata":{},"sourceType":"module"}