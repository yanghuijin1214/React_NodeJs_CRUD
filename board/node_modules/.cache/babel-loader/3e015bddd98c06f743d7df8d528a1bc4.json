{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\82108\\\\Desktop\\\\\\uACF5\\uBD80\\\\react\\uAC8C\\uC2DC\\uD310\\\\board\\\\src\\\\SignForm.js\";\nimport React, { Component } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\n\nclass SignForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.join = () => {\n      const joinEmail = this.joinEmail.value;\n      const joinName = this.joinName.value;\n      const joinPw = this.joinPw.value; //이메일 정규식\n\n      const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i; //비밀번호 정규식. 숫자와 문자, 특수문자 포함 8~16자리\n\n      const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/; //이메일 오류\n\n      if (joinEmail === \"\" || joinEmail === undefined) {\n        alert(\"이메일 주소를 입력해주세요.\");\n        this.joinEmail.focus();\n        return;\n      } else if (joinEmail.match(regExp) === null || joinEmail.match(regExp) === undefined) {\n        //이메일 형식에 맞지 않음.\n        alert(\"이메일 형식에 맞게 입력해주세요.\");\n        this.joinEmail.value = \"\";\n        this.joinEmail.focus();\n        return;\n      } else if (joinName === \"\" || joinName === undefined) {\n        alert(\"이름을 입력해주세요.\");\n        this.joinName.focus();\n        return;\n      } else if (joinPw === \"\" || joinPw === undefined) {\n        alert(\"비밀번호를 입력해주세요.\");\n        this.joinPw.focus();\n        return;\n      } else if (joinPw.match(regExp2) === null || joinPw.match(regExp2) === undefined) {\n        //비밀번호 형식 맞지 않으면\n        alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n        this.joinPw.value = \"\";\n        this.joinPw.focus();\n        return;\n      } //join 성공하면?\n      //백엔드로 넘겨줄 값\n\n\n      const send_param = {\n        //headers,\n        email: this.joinEmail.value,\n        name: this.joinName.value,\n        password: this.joinPw.value\n      };\n      axios.post(\"http://localhost:8080/member/join\", send_param) //nodejs로 회원가입 정보 넘겨준다.\n      .then(returnData => {\n        if (returnData.data.message) {\n          //return 메시지 띄워주기\n          alert(returnData.data.message); //이메일 중복체크\n\n          if (returnData.data.dupYn === \"1\") {\n            //중복되었으면\n            this.joinEmail.value = \"\";\n            this.joinEmail.focus();\n          } else {\n            //회원가입 성공?\n            this.joinEmail.value = \"\";\n            this.joinName.value = \"\";\n            this.joinPw.value = \"\";\n            window.location.href = \"/\";\n          }\n        } else {\n          alert(\"회원가입에 실패하였습니다.\");\n        }\n      }) //에러 체크\n      .catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  componentWillMount() {\n    //componentdidmount 되기 이전.\n    //컴포넌트가 생성되는 과정에서 호출된다.\n    //render 이전에 호출됨!\n    if (window.sessionStorage.getItem(\"login_id\")) {\n      window.location.href = \"/\";\n    }\n  } //회원가입\n\n\n  render() {\n    //headers가 뭘까\n    //console.log(headers);\n    //style을 const에 담음\n    const formStyle = {\n      margin: 50\n    };\n    const buttonStyle = {\n      marginTop: 10\n    }; //부트스트랩 사용\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: formStyle,\n        children: \"SignUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: formStyle,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlClass: \"joinForm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            maxLength: \"100\" //dom에 id를 지어주는 것.\n            //this.joinEmail을 통하여 이 dom에 접근 가능하다\n            ,\n            ref: ref => this.joinEmail = ref,\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n            className: \"text-muted\",\n            children: \"We'll never share your email with anyone else.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            maxLength: \"20\",\n            ref: ref => this.joinName = ref,\n            placeholder: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            maxLength: \"64\",\n            ref: ref => this.joinPw = ref,\n            placeholder: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: buttonStyle,\n            onClick: this.join //색깔\n            ,\n            variant: \"primary\",\n            type: \"button\" //block하면 한 block 크기 다 차지하도록 커짐\n            ,\n            block: true,\n            children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default SignForm;","map":{"version":3,"sources":["C:/Users/82108/Desktop/공부/react게시판/board/src/SignForm.js"],"names":["React","Component","Form","Button","axios","SignForm","join","joinEmail","value","joinName","joinPw","regExp","regExp2","undefined","alert","focus","match","send_param","email","name","password","post","then","returnData","data","message","dupYn","window","location","href","catch","err","console","log","componentWillMount","sessionStorage","getItem","render","formStyle","margin","buttonStyle","marginTop","ref"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\nclass SignForm extends Component {\r\n  componentWillMount() {\r\n    //componentdidmount 되기 이전.\r\n    //컴포넌트가 생성되는 과정에서 호출된다.\r\n    //render 이전에 호출됨!\r\n    if (window.sessionStorage.getItem(\"login_id\")) {\r\n      window.location.href = \"/\";\r\n    }\r\n  }\r\n\r\n  //회원가입\r\n  join = () => {\r\n    const joinEmail = this.joinEmail.value;\r\n    const joinName = this.joinName.value;\r\n    const joinPw = this.joinPw.value;\r\n    //이메일 정규식\r\n    const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\r\n    //비밀번호 정규식. 숫자와 문자, 특수문자 포함 8~16자리\r\n    const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\r\n\r\n    //이메일 오류\r\n    if (joinEmail === \"\" || joinEmail === undefined) {\r\n      alert(\"이메일 주소를 입력해주세요.\");\r\n      this.joinEmail.focus();\r\n      return;\r\n    } else if (\r\n      joinEmail.match(regExp) === null ||\r\n      joinEmail.match(regExp) === undefined\r\n    ) {\r\n      //이메일 형식에 맞지 않음.\r\n      alert(\"이메일 형식에 맞게 입력해주세요.\");\r\n      this.joinEmail.value = \"\";\r\n      this.joinEmail.focus();\r\n      return;\r\n    } else if (joinName === \"\" || joinName === undefined) {\r\n      alert(\"이름을 입력해주세요.\");\r\n      this.joinName.focus();\r\n      return;\r\n    } else if (joinPw === \"\" || joinPw === undefined) {\r\n      alert(\"비밀번호를 입력해주세요.\");\r\n      this.joinPw.focus();\r\n      return;\r\n    } else if (\r\n      joinPw.match(regExp2) === null ||\r\n      joinPw.match(regExp2) === undefined\r\n    ) {\r\n      //비밀번호 형식 맞지 않으면\r\n      alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\r\n      this.joinPw.value = \"\";\r\n      this.joinPw.focus();\r\n      return;\r\n    }\r\n\r\n    //join 성공하면?\r\n    //백엔드로 넘겨줄 값\r\n    const send_param = {\r\n      //headers,\r\n      email: this.joinEmail.value,\r\n      name: this.joinName.value,\r\n      password: this.joinPw.value,\r\n    };\r\n    axios\r\n      .post(\"http://localhost:8080/member/join\", send_param)\r\n      //nodejs로 회원가입 정보 넘겨준다.\r\n      .then((returnData) => {\r\n        if (returnData.data.message) {\r\n          //return 메시지 띄워주기\r\n          alert(returnData.data.message);\r\n          //이메일 중복체크\r\n          if (returnData.data.dupYn === \"1\") {\r\n            //중복되었으면\r\n            this.joinEmail.value = \"\";\r\n            this.joinEmail.focus();\r\n          } else {\r\n            //회원가입 성공?\r\n            this.joinEmail.value = \"\";\r\n            this.joinName.value = \"\";\r\n            this.joinPw.value = \"\";\r\n            window.location.href = \"/\";\r\n          }\r\n        } else {\r\n          alert(\"회원가입에 실패하였습니다.\");\r\n        }\r\n      })\r\n      //에러 체크\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    //headers가 뭘까\r\n    //console.log(headers);\r\n\r\n    //style을 const에 담음\r\n    const formStyle = {\r\n      margin: 50,\r\n    };\r\n    const buttonStyle = {\r\n      marginTop: 10,\r\n    };\r\n\r\n    //부트스트랩 사용\r\n    return (\r\n      <>\r\n        <h1 style={formStyle}>SignUp</h1>\r\n\r\n        <Form style={formStyle}>\r\n          <Form.Group controlClass=\"joinForm\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              maxLength=\"100\"\r\n              //dom에 id를 지어주는 것.\r\n              //this.joinEmail을 통하여 이 dom에 접근 가능하다\r\n              ref={(ref) => (this.joinEmail = ref)}\r\n              placeholder=\"Enter email\"\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n\r\n            <Form.Label>name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              maxLength=\"20\"\r\n              ref={(ref) => (this.joinName = ref)}\r\n              placeholder=\"name\"\r\n            />\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              maxLength=\"64\"\r\n              ref={(ref) => (this.joinPw = ref)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <Button\r\n              style={buttonStyle}\r\n              onClick={this.join}\r\n              //색깔\r\n              variant=\"primary\"\r\n              type=\"button\"\r\n              //block하면 한 block 크기 다 차지하도록 커짐\r\n              block\r\n            >\r\n              회원가입\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignForm;\r\n"]},"metadata":{},"sourceType":"module"}